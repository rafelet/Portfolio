$planetCount: 9;
$planetSize: 1200px; // Size of each planet
$planetSpacing: 2300px; // Space between each planet
$planetTransitionSpeed: 2s;
$mainPlanetViewAmount: 280; // Less means we see more of the planet at the bottom
$globalPerspective: 800px;
$sceneAxisTilt: -20deg;
$menuSpacing: 14px;
$traverse: "";
$traverseTriggers: "";

// Colors
$mercury:#E8927C;
$venus: #b45d15;
$earth: #26daaa;
$mars: #e55f45;
$jupiter: orange;
$saturn: #b29d81;
$uranus: #8dcdd8;
$neptune: #4f83e2;
$pluto: #FF8732;

@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400,700');

// fix

.solar_systm {
    transform-style: preserve-3d;
    pointer-events: none;
    height: 100%;
    position: absolute;
    left: 0;
    right: 0;
}

* {
    -webkit-user-select: none;  /* Chrome all / Safari all */
    -moz-user-select: none;     /* Firefox all */
    -ms-user-select: none;      /* IE 10+ */
    user-select: none;          /* Likely future */   
}
%absPosition {
    position: absolute;
    left: 0;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    margin: auto;
}

@mixin makePlanet($outer, $inner, $texture) {
    background: url($texture);
    box-shadow: 0 (-590px) 150px black inset, 0 0px 130px 40px $inner inset, 0 0px 23px 4px $inner inset, 0 -10px 130px $outer;
}

%trajectory {
    border: 2px dashed white;
    position: absolute;
    border-radius: 3400px;
    background: none !important;
    z-index: -2;
}

%planet {
    max-height: 1200px;
    min-height: 200px;
    max-width: 544px;
    min-width: 350px;
    height: 100%;
    width: 61%;
    border-radius: 600px;
    
    background: red;
    transition: transform 2.8s .23s cubic-bezier(0.33, 0, 0, 1), opacity 2s .8s, box-shadow 0s 0s; //
    // background-size: 1140px 910px !important;
    // top: auto;
    // bottom: - $planetSize + $mainPlanetViewAmount;

    @keyframes planet {
        from {background-position-y: 0px;}
        to {background-position-y: -1000px;}
    }
}

%viewPort {
    position: absolute;
    transform: rotatex($sceneAxisTilt);
    perspective: $globalPerspective;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
}

%trigger {
    @extend %absPosition;

    width: 220px;
    height: 220px;
    border-radius: 550px;
    appearance: none;
    outline: none;
    cursor: pointer;
    z-index: 12;
    left: 18px;
    bottom: 282px;
}

%checkbox { 
    appearance: none;
    width: 16px;
    height: 16px;
    border: 2px solid white;
    outline: none;
    border-radius: 20px;
    left: 43px;
    z-index: 2;

    &:checked {
        &::before {
            display:block;
            width: 6px;
            height: 6px;
            background: white;
            position: relative;
            top: 3px;
            left: 3px;
            content: '';
            border-radius: 10px;
        }
    }
}

body {
    overflow: hidden;
    background: black;
    height: 100vh;
    font-family: 'Montserrat', sans-serif;
    .logo {
        color: white;
          font-size: 14px;
          text-transform: uppercase;
          font-weight: 100;
          letter-spacing: 4px;
        span  {
            font-size: 14px;
            color: #4197f3;
            // display: block;
        }
    }
    label {
        cursor: pointer;
    }
    label.menu {
        color: white;
        display: block;
        position: absolute;
        cursor: pointer;
        left: 2rem;
        z-index: 2;

        &:after {
            display: block;
            width: 12px;
            height: 12px;
            border: 2px solid white;
            border-radius: 60px;
            content: '';
            z-index: 2;
            position: absolute;
            top: -4px;
            left:-4px;
        }

        &:hover {
            h2,h3 {
                opacity: 1;
            }
        }

        &.mercury {
            h2 .pip {
                background: white;
            }
        }

        


        & .preview {
            width: 30px;
            height: 30px;
            //background: yellow;
            float: left;
            background-size: auto 100% !important;
            position: absolute;
            border-radius: 100px;
            //border: 2px solid white;
            box-shadow: 0 -5px 10px 2px black inset;
        }

        & .info {
            position: relative;
            left: 50px;
            top:1px;
        }


        h2,
        h3 {
            text-transform: uppercase;
            margin: 0;
            font-weight: 100;
            letter-spacing: 2px;

        }

        h2 {
            font-size: 14px;
            opacity: 0.4;
            margin-bottom: 4px;


            & .pip {
                width: 0;
                height: 9px;
                background: #4197f3;
                float: left;
                position: relative;
                top: 3px;
                transition: all 0.3s;
                //transform: skew(-10deg);
                margin-right: 0px;
            }
        }

        h3 {
            font-size: 8px;
            letter-spacing: 1px;
            transition: all 0.3s;
            opacity: 0.3;
        }

        @for $l from 1 through $planetCount {
            &:nth-of-type(#{$l}) {
                // Caluclate middle and distribute evenly
                $labelSize: 34px;
                $labelSpacing: $menuSpacing;
                $totalHeight: calc(($labelSize * $planetCount) + ($labelSpacing * ($planetCount)) / 2);

                top: calc(50vh + 100px + ((#{$labelSpacing} + #{$labelSize}) * #{$l}) + 0px - #{$totalHeight});   
            }
        }
    }

    & input.read {
        display: none;
    }

    // & .read:checked + label + input + .panel {
    //     right: 0;
    // }

    & .read:checked + label {
        // width: calc(100% - 420px);

        &::after {
            opacity: 1;
            left: 0;
        }


    }

    & .read:checked + label + label {
        transition: all 0.3s .6s;
        opacity: 1;
    }

    & .read:not(:checked) + label + label {
        transition: all 0.3s 0s;
        opacity: 0;
    }

    label.close {
        position: absolute;
        right: 60px;
        opacity: 0;
        transition: all 0.3s 0.4s;
        z-index: 3;
        top: 65px;

    }

    & .overlay {
        @extend %absPosition;
        border-bottom: 1020px solid black;
        width: 1800px;
        height: 620px;
        top: auto;
        -webkit-transform: none;
        transform: none;
        top: -240px;
        left: -303px;
        opacity: 1;
        border-radius: 100%;
        z-index: 0;
        //transition: all .95s .2s;
        box-shadow: 0px -190px 215px 110px black inset;

    }

    @for $a from 1 through $planetCount {

        $traverse: $traverse + " input + label +";
        $traverseTriggers: $traverseTriggers + " input + label +";

        @if ($a == 1) {
            $traverseTriggers: "label +";
        } 

        @if ($a == 2) {
            $traverseTriggers: "label +";
        } 

        @if($a == 1) {
            $traverse: "label +";
        }

        input[type="radio"][name="planet"] {
            //@extend %checkbox;
            appearance: none;

            &::after {
                @extend %absPosition;
                @extend %trigger;

                content: '';
            }


            &.planet#{$a}:checked {
                &::after {
                    display: none;
                }

                $input: "";

                @for $b from 1 through $a {
                    $input: $input + "+label + input";
                    & #{$input}::after {
                        display: none;
                    }
                }

                & + #{$traverse} div {
                    // Now in root

                    & .solar_systm {
                       
                        
                        &:nth-of-type(#{$a}) {
                             pointer-events: all;
                        }
                        
                        @for $i from 1 through $planetCount {
                            &:nth-of-type(#{$i}) .planet {
                                $translateY: 0;
                                $translateZ: - $planetSpacing * ($i - 1) + ($planetSpacing * ($a - 1));
                                $rotateX: 4deg;
                                $scaleOffset: 0.89;
                                $opacity: 2 - ($i - 1) + ($a - 1);
                                
                                transform: translateZ($translateZ) translateY($translateY) rotatex($rotateX) scaleX($scaleOffset);
                                opacity: $opacity;

                                @if($a == $i) {
                                    animation: planet 60s 3.9s infinite linear;
                                }
                                
                                &_description {
                                    @if($a == $i) {
                                        opacity: 1;
                                        transition: all .6s 2.6s;
                                        h2,
                                        h1 {
                                            position: relative;
                                            top: 0px;
                                            transition: all .5s 3s;
                                        }

                                        p, 
                                        a {
                                            transition: all 1s 3.5s, padding 0.3s 0s;
                                            opacity: 1;
                                        }
                                    }
                                }

                                & .moon {
                                    @if($a == $i) {
                                        opacity: 1;
                                        transition: all 1s 3.2s;
                                    }  
                                }

                                & .trajectory {
                                    @if($a == $i) {
                                        opacity: 0.2;
                                        transition: all .6s 2.9s;
                                    }  
                                }

                                & .overlay {
                                    @debug $a;
                                    @debug $i;

                                    @if($a == $i) {
                                        opacity: 1;
                                        top: -240px;
                                    }
                                }
                            }
                        }
                    }
                }

                & + label {
                    opacity: 1;

                    &:before {
                        display: block;
                        width: 4px;
                        height: 4px;
                        position: absolute;
                        left: 2px;
                        top: 2px;
                        z-index: 2;
                        background: white;
                        border-radius: 4px;
                        content: '';
                    }
                    & > .info h2  {
                        opacity: 1;
                        & .pip {
                            width: 30px;
                            margin-right: 6px;   
                        }

                    }

                    & > .info h3 {
                        opacity: 1;
                        color:#4197f3;
                    }
                }
            }
        }
    }

    .solar {
        @extend %viewPort;

        &_systm {
            @for $i from 1 through $planetCount {
                &:nth-of-type(#{$i}) {
                    & .planet {
                        // This is our initial view of the planets before anything is pressed
                        $translateY: 0;
                        $translateZ: -$planetSpacing * ($i - 1);
                        $opacity: 2 - ($i - 1);
                        $rotateX: 4deg;
                        $scaleOffset: 0.89;
                        transform: translateZ($translateZ) translateY($translateY) rotatex($rotateX) scalex($scaleOffset);
                        opacity: $opacity;

                        &_description {
                            opacity: 1;
                            
                            p,
                            a {
                                opacity: 0;
                            }

                            h1,
                            h2 {
                                position: relative;
                                top: -330px;
                                transition: all .5s 0s;
                            }
                        }
                    }
                }
            }

            & .planet {
                @extend %absPosition;
                @extend %planet;
                box-shadow:0 -300px 151px black inset, 0 -12px 7px 0px rgb(234 205 199 / 60%) inset, 0 0px 23px 4px rgb(234 205 199 / 60%) inset, 0 -10px 130px rgb(188 143 127 / 60%);

                &_description {
                    width: 100%;
                    text-align: center;
                    position: absolute;
                    margin: auto;
                    left: 0;
                    right: 0;
                    color: white;
                    font-weight: 100;
                    text-transform: uppercase;
                    z-index: 1;
                    display: flex;
                    flex-flow: column;
                    justify-content: center;

                    h1,
                    h2,
                    p,
                    a {
                        font-weight: 100;
                        font-size: 10px;
                        letter-spacing: 5px;
                        margin: 0;
                    }

                    h1 {
                        letter-spacing: 16px;
                        font-size: 34px;
                    }

                    h2,
                    a {
                        color: #fff;
                    }

                    h2 {
                        margin-top: 60px;
                        margin-bottom:6px;
                    }

                    p {
                        line-height: 26px;
                        margin-top:14px;
                        opacity: 0.9;
                        margin-bottom: 10px;
                    }

                    a {
                        color: #4197f3;
                        font-size: 11px;
                        font-weight: 500;
                        padding: 0 2px 5px 0px;
                        border-bottom: 2px solid;
                        transition: all 0.2s;
                        position: relative;
                        left: 0;

                        &:hover {
                            padding: 0 10px 5px 10px;
                            left: -1px;
                        }

                        span {
                            letter-spacing: 0;
                            margin-left: -5px;
                        }
                    }
                }
            }
        }
    }

}